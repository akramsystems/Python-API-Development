name: Build and Deploy Code

# Defines what triggers the workflow
on: [push, pull_request]
# push: # trigger on push
#   branches: # branches we want to trigger on push
#     - "main"
#     - "feature-branch"
# pull_request:
#   branches:
#     - "main"
#     - "feature-branch"

jobs:
  
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: ${ secrets.DATABASE_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}_test
        # Set health checks to wait until postgres has started
        ports:
          - "$DATABASE_PORT:$DATABASE_PORT"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest # machine we are running job on
    strategy:
      matrix:
        python-version: ["3.9"]
    steps: 
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: test run
        run: echo "testing github actions step"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest
  #     - name: Lint with flake8
  #       run: |
  #         # stop the build if there are Python syntax errors or undefined names
  #         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics